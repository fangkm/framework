/*
 * Copyright (C) 2006, 2007, 2008 Apple Inc. All rights reserved.
 * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

[
    CustomToV8
] interface HTMLDocument : Document {
    [Custom, CustomElementCallbacks=Enable] void open();
    void close();
    [Custom, PerWorldBindings, ActivityLog=AccessForIsolatedWorlds, CustomElementCallbacks=Enable] void write([Default=Undefined] optional DOMString text);
    [Custom, PerWorldBindings, ActivityLog=AccessForIsolatedWorlds, CustomElementCallbacks=Enable] void writeln([Default=Undefined] optional DOMString text);

    readonly attribute HTMLCollection embeds;
    readonly attribute HTMLCollection plugins;
    readonly attribute HTMLCollection scripts;

    // Extensions

    [Replaceable, ImplementedAs=allForBinding] readonly attribute HTMLAllCollection all;

    [DeprecateAs=DocumentClear] void clear();

    [DeprecateAs=CaptureEvents] void captureEvents();
    [DeprecateAs=ReleaseEvents] void releaseEvents();

    [TreatNullAs=NullString, CustomElementCallbacks=Enable] attribute DOMString dir;
    [TreatNullAs=NullString, CustomElementCallbacks=Enable] attribute DOMString designMode;
    readonly attribute DOMString compatMode;

    readonly attribute Element activeElement;
    boolean hasFocus();

    // Deprecated attributes
    [TreatNullAs=NullString, CustomElementCallbacks=Enable] attribute DOMString bgColor;
    [TreatNullAs=NullString, CustomElementCallbacks=Enable] attribute DOMString fgColor;
    [TreatNullAs=NullString, CustomElementCallbacks=Enable] attribute DOMString alinkColor;
    [TreatNullAs=NullString, CustomElementCallbacks=Enable] attribute DOMString linkColor;
    [TreatNullAs=NullString, CustomElementCallbacks=Enable] attribute DOMString vlinkColor;
};

